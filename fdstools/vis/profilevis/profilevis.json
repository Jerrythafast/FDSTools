{
  "fdstools_visversion": "1.0.0",
  "width": 600,
  "height": 10,
  "signals": [
    {
      "name": "filter_threshold",
      "init": 0.5
    },
    {
      "name": "filter_marker",
      "init": ""
    },
    {
      "name": "marker_regex",
      "init": {"expr": "regexp('(?:' + replace(replace(replace(filter_marker, /^ *(.*?) *$/, '$1'), /(^| )=(.*?)(?= |$)/g, '$1^$2$$'), / +/g, ')|(?:') + ')')"},
      "expr": "regexp('(?:' + replace(replace(replace(filter_marker, /^ *(.*?) *$/, '$1'), /(^| )=(.*?)(?= |$)/g, '$1^$2$$'), / +/g, ')|(?:') + ')')"
    },
    {
      "name": "barwidth",
      "init": 15
    },
    {
      "name": "subgraphoffset",
      "init": 70
    },
    {
      "name": "low",
      "init": 0
    }
  ],
  "data": [
    {
      "name": "table",
      "values": "VALUES HERE",
      "format": {
        "type": "tsv",
        "parse": {
          "fmean": "number",
          "rmean": "number"
        }
      },
      "transform": [
        {
          "type": "filter",
          "test": "datum.allele != datum.sequence && max(datum.fmean, datum.rmean) >= filter_threshold && test(marker_regex, datum.marker)"
        },
        {
          "type": "formula",
          "field": "fmean",
          "expr": "max(datum.fmean, low)"
        },
        {
          "type": "formula",
          "field": "rmean",
          "expr": "max(datum.rmean, low)"
        },
        {
          "type": "formula",
          "field": "flabel",
          "expr": "indexof(''+round(datum.fmean*10)/10, '.') == -1? ((round(datum.fmean*10)/10) + '.0') : slice((round(datum.fmean*10)/10)+'0', 0, indexof((round(datum.fmean*10)/10) + '.', '.')+2)"
        },
        {
          "type": "formula",
          "field": "rlabel",
          "expr": "indexof(''+round(datum.rmean*10)/10, '.') == -1? ((round(datum.rmean*10)/10) + '.0') : slice((round(datum.rmean*10)/10)+'0', 0, indexof((round(datum.rmean*10)/10) + '.', '.')+2)"
        },
        {
          "type": "formula",
          "field": "name",
          "expr": "datum.marker + ' ' + datum.allele"
        },
        {
          "type": "sort",
          "by": ["name", "sequence"]
        },
        {
          "type": "rank"
        }
      ]
    },
    {
      "name": "barcounts",
      "source": "table",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["name"],
          "summarize": {"*": "count"}
        }
      ]
    },
    {
      "name": "subgraphpadding",
      "source": "barcounts",
      "transform": [
        {
          "type": "cross",
          "diagonal": false,
          "filter": "datum.b.name < datum.a.name"
        },
        {
          "type": "formula",
          "field": "name",
          "expr": "datum.a.name"
        },
        {
          "type": "aggregate",
          "groupby": ["name"],
          "summarize": [{"field": "*", "ops": ["count"], "as": ["cumulpadding"]}]
        }
      ]
    },
    {
      "name": "subgraphoffsets",
      "source": "barcounts",
      "transform": [
        {
          "type": "cross",
          "with": "table",
          "filter": "datum.b.name < datum.a.name"
        },
        {
          "type": "formula",
          "field": "name",
          "expr": "datum.a.name"
        },
        {
          "type": "aggregate",
          "groupby": ["name"],
          "summarize": [{"field": "*", "ops": ["count"], "as": ["cumulcount"]}]
        }
      ]
    },
    {
      "name": "yscale",
      "source": "barcounts",
      "transform": [
        {
          "type": "lookup",
          "on": "subgraphpadding",
          "onKey": "name",
          "keys": ["name"],
          "as": ["paddingobj"],
          "default": {"cumulpadding": 0}
        },
        {
          "type": "lookup",
          "on": "subgraphoffsets",
          "onKey": "name",
          "keys": ["name"],
          "as": ["offsetobj"],
          "default": {"cumulcount": 0}
        },
        {
          "type": "formula",
          "field": "offset",
          "expr": "2*barwidth*datum.offsetobj.cumulcount + subgraphoffset*datum.paddingobj.cumulpadding"
        },
        {
          "type": "formula",
          "field": "end",
          "expr": "datum.offset + 2*barwidth*datum.count"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "c",
      "type": "ordinal",
      "range": ["#5e3c99", "#e66101"],
      "domain": ["Forward reads", "Reverse reads"]
    }
  ],
  "marks": [
    {
      "type": "text",
      "from": {
        "data": "yscale"
      },
      "properties": {
        "update": {
          "x": {"field": {"group": "width"}, "mult": 0.5},
          "y": {"field": "offset"},
          "fontWeight": {"value": "bold"},
          "text": {"field": "name"},
          "align": {"value": "center"},
          "baseline": {"value": "bottom"},
          "fill": {"value": "black"}
        }
      }
    },
    {
      "type": "group",
      "from": {
        "data": "table",
        "transform": [
          {
            "type": "facet",
            "groupby": ["name"]
          },
          {
            "type": "lookup",
            "on": "yscale",
            "onKey": "name",
            "keys": ["name"],
            "as": ["subgraphscale"]
          }
        ]
      },
      "properties": {
        "update": {
          "x": {"value": 0},
          "width": {"field": {"group": "width"}},
          "y": {"field": "subgraphscale.offset"},
          "y2": {"field": "subgraphscale.end"},
          "stroke": {"value": "#dddddd"}
        }
      },
      "scales": [
        {
          "name": "x",
          "type": "linear",
          "nice": true,
          "range": "width",
          "domainMin": {"signal": "low"},
          "domainMax": {"data": "table", "field": ["fmean", "rmean"]}
        },
        {
          "name": "y",
          "type": "ordinal",
          "range": "height",
          "domain": {"field": "sequence", "sort": {"field": "rank", "op": "min"}}
        }
      ],
      "axes": [
        {
          "type": "x",
          "scale": "x",
          "grid": true,
          "layer": "back",
          "title": "Noise ratio (%)"
        },
        {
          "type": "y",
          "scale": "y"
        }
      ],
      "legends": [
        {
          "fill": "c",
          "properties": {
            "symbols": {
              "size": {"value": 100},
              "stroke": {"value": "transparent"},
              "fillOpacity": {"value": 0.8}
            }
          }
        }
      ],
      "marks": [
        {
          "type": "group",
          "from": {
            "transform": [
              {
                "type": "facet",
                "groupby": ["sequence"]
              }
            ]
          },
          "properties": {
            "update": {
              "x": {"value": 0},
              "y": {"scale": "y", "field": "key", "offset": 1},
              "width": {"field": {"group": "width"}},
              "height": {"scale": "y", "band": true, "offset": -2}
            }
          },
          "scales": [
            {
              "name": "bars",
              "type": "ordinal",
              "range": "height",
              "domain": ["Forward reads", "Reverse reads"]
            },
            {
              "name": "labels",
              "type": "ordinal",
              "range": "height",
              "points": "true",
              "padding": 1,
              "domain": ["Forward reads", "Reverse reads"]
            }
          ],
          "marks": [
            {
              "type": "rect",
              "properties": {
                "update": {
                  "x": {"scale": "x", "signal": "low"},
                  "x2": {"scale": "x", "field": "fmean"},
                  "y": {"scale": "bars", "value": "Forward reads"},
                  "height": {"scale": "bars", "band": true},
                  "fill": {"scale": "c", "value": "Forward reads"},
                  "fillOpacity": {"value": 0.8}
                }
              }
            },
            {
              "type": "text",
              "properties": {
                "update": {
                  "x": {"scale": "x", "field": "fmean", "offset": 5},
                  "y": {"scale": "labels", "value": "Forward reads"},
                  "fontWeight": {"value": "bold"},
                  "text": {"field": "flabel"},
                  "align": {"value": "left"},
                  "baseline": {"value": "middle"},
                  "fill": {"value": "#000000"}
                }
              }
            },
            {
              "type": "rect",
              "properties": {
                "update": {
                  "x": {"scale": "x", "signal": "low"},
                  "x2": {"scale": "x", "field": "rmean"},
                  "y": {"scale": "bars", "value": "Reverse reads"},
                  "height": {"scale": "bars", "band": true},
                  "fill": {"scale": "c", "value": "Reverse reads"},
                  "fillOpacity": {"value": 0.8}
                }
              }
            },
            {
              "type": "text",
              "properties": {
                "update": {
                  "x": {"scale": "x", "field": "rmean", "offset": 5},
                  "y": {"scale": "labels", "value": "Reverse reads"},
                  "fontWeight": {"value": "bold"},
                  "text": {"field": "rlabel"},
                  "align": {"value": "left"},
                  "baseline": {"value": "middle"},
                  "fill": {"value": "#000000"}
                }
              }
            }
          ]
        }
      ]
    }
  ]
}
