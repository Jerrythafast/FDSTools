{
  "width": 600,
  "height": 10,
  "data": [
    {
      "name": "table",
      "values": "VALUES HERE",
      "format": {
        "type": "tsv",
        "parse": {
          "forward": "number",
          "reverse": "number",
          "total": "number",
          "fnoise": "number",
          "rnoise": "number",
          "tnoise": "number"
        }
      },
      "transform": [
        {
          "type": "filter",
          "test": "datum.allele != datum.sequence"
        },
        {
          "type": "formula",
          "field": "amplitude_threshold",
          "expr": "5"
        },
        {
          "type": "formula",
          "field": "amplitude_pct_threshold",
          "expr": "0.5"
        },
        {
          "type": "formula",
          "field": "maxnoise",
          "expr": "max(datum.fnoise, datum.rnoise, datum.tnoise)"
        },
        {
          "type": "filter",
          "test": "datum.total >= 1 && datum.total >= datum.amplitude_threshold && datum.maxnoise >= datum.amplitude_pct_threshold"
        },
        {
          "type": "formula",
          "field": "filter_marker",
          "expr": "'.*'"
        },
        {
          "type": "filter",
          "test": "test('^' + datum.filter_marker + '$', datum.marker)"
        },
        {
          "type": "formula",
          "field": "name",
          "expr": "datum.marker + ' ' + datum.allele"
        },
        {
          "type": "sort",
          "by": ["name", "-tnoise", "-maxnoise"]
        },
        {
          "type":
          "formula",
          "field": "minnoise",
          "expr": "max(0.001, min(datum.fnoise, datum.rnoise, datum.tnoise))"
        }
      ]
    },
    {
      "name": "barcounts",
      "source": "table",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["name"],
          "summarize": [{"field": "sequence", "ops": ["distinct"], "as": ["count"]}]
        }
      ]
    },
    {
      "name": "subgraphpadding",
      "source": "barcounts",
      "transform": [
        {
          "type": "cross",
          "diagonal": false
        },
        {
          "type": "filter",
          "test": "datum.b.name < datum.a.name"
        },
        {
          "type": "formula",
          "field": "name",
          "expr": "datum.a.name"
        },
        {
          "type": "aggregate",
          "groupby": ["name"],
          "summarize": [{"field": "b.name", "ops": ["distinct"], "as": ["cumulpadding"]}]
        }
      ]
    },
    {
      "name": "workaround for https://github.com/vega/vega/issues/341",
      "source": "barcounts",
      "transform": [
        {
          "type": "cross",
          "with": "table"
        },
        {
          "type": "filter",
          "test": "datum.b.name < datum.a.name"
        },
        {
          "type": "formula",
          "field": "namesequence",
          "expr": "datum.b.name + datum.b.sequence"
        },
        {
          "type": "formula",
          "field": "name",
          "expr": "datum.a.name"
        }
      ]
    },
    {
      "name": "subgraphoffsets",
      "source": "workaround for https://github.com/vega/vega/issues/341",
      "transform": [
        {
          "type": "aggregate",
          "groupby": ["name"],
          "summarize": [{"field": "namesequence", "ops": ["distinct"], "as": ["cumulcount"]}]
        }
      ]
    },
    {
      "name": "yscale",
      "source": "barcounts",
      "transform": [
        {
          "type": "lookup",
          "on": "subgraphpadding",
          "onKey": "name",
          "keys": ["name"],
          "as": ["paddingobj"],
          "default": {"cumulpadding": 0}
        },
        {
          "type": "lookup",
          "on": "subgraphoffsets",
          "onKey": "name",
          "keys": ["name"],
          "as": ["offsetobj"],
          "default": {"cumulcount": 0}
        },
        {
          "type": "formula",
          "field": "barwidth",
          "expr": "15"
        },
        {
          "type": "formula",
          "field": "subgraphoffset",
          "expr": "70"
        },
        {
          "type": "formula",
          "field": "offset",
          "expr": "(10+datum.barwidth)*datum.offsetobj.cumulcount + datum.subgraphoffset*datum.paddingobj.cumulpadding"
        },
        {
          "type": "formula",
          "field": "end",
          "expr": "datum.offset + (10+datum.barwidth)*datum.count"
        }
      ]
    }
  ],
  "scales": [
    {
      "name": "c",
      "type": "ordinal",
      "range": ["#5e3c99", "#fdb863", "#e66101"],
      "domain": ["Total reads", "Forward reads", "Reverse reads"]
    }
  ],
  "marks": [
    {
      "type": "text",
      "from": {
        "data": "yscale"
      },
      "properties": {
        "enter": {
          "x": {"field": {"group": "width"}, "mult": 0.5},
          "y": {"field": "offset"},
          "fontWeight": {"value": "bold"},
          "text": {"field": "name"},
          "align": {"value": "center"},
          "baseline": {"value": "bottom"},
          "fill": {"value": "black"}
        }
      }
    },
    {
      "type": "group",
      "from": {
        "data": "table",
        "transform": [
          {
            "type": "facet",
            "groupby": ["name"]
          },
          {
            "type": "lookup",
            "on": "yscale",
            "onKey": "name",
            "keys": ["name"],
            "as": ["subgraphscale"]
          }
        ]
      },
      "properties": {
        "enter": {
          "x": {"value": 0},
          "width": {"field": {"group": "width"}},
          "y": {"field": "subgraphscale.offset"},
          "y2": {"field": "subgraphscale.end"},
          "stroke": {"value": "#dddddd"}
        }
      },
      "scales": [
        {
          "name": "x",
          "type": "linear",
          "nice": true,
          "range": "width",
          "domain": {"data": "table", "field": ["minnoise", "maxnoise"]}
        },
        {
          "name": "y",
          "type": "ordinal",
          "points": true,
          "padding": 1,
          "range": "height",
          "domain": {"field": "sequence"}
        }
      ],
      "axes": [
        {
          "type": "x",
          "scale": "x",
          "grid": true,
          "layer": "back",
          "title": "Noise ratio (%)",
          "properties": {
            "title": {
              "dy": {"value": -5}
            }
          }
        },
        {
          "type": "y",
          "scale": "y",
          "grid": true,
          "layer": "back"
        }
      ],
      "legends": [
        {
          "fill": "c",
          "title": "Noise ratio in:",
          "properties": {
            "symbols": {
              "size": {"value": 100},
              "stroke": {"value": "transparent"},
              "fillOpacity": {"value": 0.8}
            }
          }
        }
      ],
      "marks": [
        {
          "type": "symbol",
          "from": {
            "transform": [
              {
                "type": "filter",
                "test": "datum.forward >= 1 && datum.forward >= datum.amplitude_threshold"
              },
              {
                "type": "filter",
                "test": "datum.fnoise >= datum.amplitude_pct_threshold"
              }
            ]
          },
          "properties": {
            "enter": {
              "x": {"scale": "x", "field": "fnoise"},
              "y": {"scale": "y", "field": "sequence", "offset": -5},
              "fill": {"scale": "c", "value": "Forward reads"},
              "fillOpacity": {"value": 0.8}
            },
            "update": {
              "size": {"value": 100},
              "stroke": {"value": "transparent"}
            },
            "hover": {
              "size": {"value": 300},
              "stroke": {"value": "white"}
            }
          }
        },
        {
          "type": "symbol",
          "from": {
            "transform": [
              {
                "type": "filter",
                "test": "datum.reverse >= 1 && datum.reverse >= datum.amplitude_threshold"
              },
              {
                "type": "filter",
                "test": "datum.rnoise >= datum.amplitude_pct_threshold"
              }
            ]
          },
          "properties": {
            "enter": {
              "x": {"scale": "x", "field": "rnoise"},
              "y": {"scale": "y", "field": "sequence", "offset": 5},
              "fill": {"scale": "c", "value": "Reverse reads"},
              "fillOpacity": {"value": 0.8}
            },
            "update": {
              "size": {"value": 100},
              "stroke": {"value": "transparent"}
            },
            "hover": {
              "size": {"value": 300},
              "stroke": {"value": "white"}
            }
          }
        },
        {
          "type": "symbol",
          "from": {
            "transform": [
              {
                "type": "filter",
                "test": "datum.total >= 1 && datum.total >= datum.amplitude_threshold"
              },
              {
                "type": "filter",
                "test": "datum.tnoise >= datum.amplitude_pct_threshold"
              }
            ]
          },
          "properties": {
            "enter": {
              "x": {"scale": "x", "field": "tnoise"},
              "y": {"scale": "y", "field": "sequence"},
              "fill": {"scale": "c", "value": "Total reads"},
              "fillOpacity": {"value": 0.8}
            },
            "update": {
              "size": {"value": 100},
              "stroke": {"value": "transparent"}
            },
            "hover": {
              "size": {"value": 300},
              "stroke": {"value": "white"}
            }
          }
        }
      ]
    }
  ]
}
