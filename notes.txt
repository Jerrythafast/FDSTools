To-do:
* [BUG] Vis can't write to stdout (UnicodeError) on Windows.
* Homologation:
  * All tools should check the number of columns at each line (like Stuttermark does).
  * All tools should allow for additional columns to be present.
  * Make better use of print_debug() in all tools and postpone string formatting.
* Library functions:
  * Some way to specify multi-copy markers with different refseqs like Amel.
* Group tools by function in the command line help and put Pipeline on top.
* Samplevis:
  * Add options analogous to samplestats -E -D -G.
  * Detect whether correction was performed; hide related columns if not.
  * A PctOfAlleles column in the tables would be useful for mixtures.
  * Option to choose complete table download (all columns, not all rows).
  * Option to freely adjust the sorting (currently CE length toggle only).
  * Some of the media query breakpoints overlap, fix this.
  * Make Samplevis more responsive when rendering/updating graphs. To do this,
    the work should be broken up into chunks and each chunk should set off the
    next chunk through "window.setTimeout(nextChunkFunction);". The page will
    be repainted between each chunk. One major issue with this is that user
    input events may get scheduled between the chunks.
  * Allow table filtering options to be specified for each marker separately.
* Stuttermodelvis:
  * Loading of external raw data points file into HTML appears to be broken.
* Pipeline:
  * Add raw sequence output to ref-sample and case-sample analyses.
* Samplestats:
  * Add percentage-of-called-alleles columns.
  * Add per-marker allele calling settings to Samplestats.
* BGAnalyse:
  * Add columns containing the sequence of the highest/lowest noise and the
    sequence with the highest percentage recovery in every sample and marker.
* Vis:
  * Add grouping, show/hide options, and target coverage for BGAnalyseVis to the
    Vis tool.
  * Add r2 filter and stutter amount for Stuttermodelvis to the Vis tool.
* Microhap support for length-changing variants and insertions.
* Exceptions to general mtDNA nomenclature: http://empop.online/methods
* Reduce noise profile memory usage:
  * Use sparse matrices in BGEstimate and BGCorrect.  May save over 90% of
    memory for the profile matrix after BGMerge of BGEstimate and BGPredict.
* Add 'BGDiff' tool to compare noise profiles.
* Add section to the library file where genomic positions of known pathogenic
  variants are specified. The TSSV tool should always output the reference base
  at these positions to comply with ethical regulations.
* Add options to Samplevis, Samplestats (and possibly other relevant tools) to
  filter alleles by sequence length.  The TSSV tool already supports this.
* Add visualisation with all markers in one graph ("samplesummaryvis"?).
* Add tool to analyse within-marker and between-marker coverage variation.
* Allow loading multiple files into HTML visualisations and provide prev/next
  buttons to browse them.
* Adjust BGEstimate so that it computes forward and reverse in one go.  To do
  this, double the number of columns in P and C and put the forward profile in
  the left half and the reverse profile in the right half.  The benefit of this
  is that this ensures the same A is used for both strands, that is, the
  estimated allele balance is the same.
* Idea to make Stuttermodel for heterozygotes: compute a fit to the (weighted)
  profiles from BGEstimate.
* Adjust BGEstimate so that it takes strand bias in the allele itself into
  account as well.
* Perhaps there should be a version of BGEstimate that makes a profile for each
  genotype instead of each allele.  This allows for the detection of hybrids.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Inclusion of tools developed during the project into FDSTools:
PRIO    OLD TOOL NAME       DESCRIPTION
------- ------------------- ---------------------------------------------------
LOW     qq-plot             Draw Q-Q plot vs normal/lognormal distributions
LOW     stuttercheck        Sort-of stuttermodel using profiles as input
LOW     substitutioncheck   Sort-of substitutionmodel using profiles as input
DONE    gen-allele-names    Convert TSSV-style sequences to allelenames
DONE    stuttermark         Mark stutter products in sample
DONE    analyze-background  BGEstimate: generate background profiles
DONE    profilemark         BGCorrect: find and correct for noise in samples
DONE    gen-bg-profiles     Compute statistics on noise in homozygous samples
DONE    allelenames-update  Convert allele names from one library to another
DONE    polyfit-repeat-len  Stuttermodel: predict stutter from sequence
DONE    common-background   Compute noise ratios in homozygous samples
DROP    blame               Find dirty samples in the reference database
DROP    alleles-convert     Convert allele names using lookup table
DROP    block-dedup         Remove duplicate blocks in TSSV-style sequences
DROP    graphgen            Create bar graph from a sample's data
DROP    find-true-alleles   Check whether the true alleles are detected
DROP    allele-graph        Create a graph of allele co-occurrence
DROP    ambiguity           Find potentially ambiguous allele combinations
DROP    strandbias          Find strand bias in the data
DROP    annotate-alleles    Annotate true alleles in sample based on allelelist

Visualisations:
LOW     qqplot              Q-Q plot of normal/lognormal distribution
DONE    samplevis           Sample data
DONE    profiles            Background profiles
DONE    bg                  Dotplots of noise ratios in homozygous samples
DONE    trends              Fit repeat length vs stutter amount
DONE    allelegraph         Homozygosity/heterozygosity
DROP    blame               Common alleles

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Argument group order*:
input file options          bgcorrect,findnewalleles,samplestats,seqconvert,stuttermark
output file options         allelefinder,bganalyse,bgcorrect,bgestimate,bghomraw,bghomstats,bgmerge,findnewalleles,samplestats,seqconvert,stuttermark,stuttermodel,tssv
sample tag parsing options  allelefinder,bganalyse,bgcorrect,bgestimate,bghomraw,bghomstats,findnewalleles,pipeline,samplestats,seqconvert,stuttermark,stuttermodel
allele detection options    bganalyse,bgestimate,bghomraw,bghomstats,stuttermodel
interpretation options      samplestats
filtering options           allelefinder,bgcorrect,bgestimate,bghomraw,bghomstats,bgpredict,findnewalleles,samplestats,stuttermark,stuttermodel,tssv
sequence format options     allelefinder,bganalyse,bgcorrect,bgestimate,bghomraw,bghomstats,bgmerge,bgpredict,findnewalleles,stuttermark,stuttermodel,tssv
visualisation options       vis
*tssv has sequence format options before output file options

Input/output of tools:      INPUT           OUTPUT
allelefinder    list of sample files        *single output + report
bganalyse       list of sample files        single output
bgcorrect       bg file + single sample (b) single sample (batches supported)
bgestimate      list of sample files        single output + report
bghomraw        list of sample files        single output
bghomstats      list of sample files        single output
bgmerge^        list of bg files            single output
bgpredict^      model + seqfile             single output
findnewalleles  seqfile + single sample (b) single sample (batches supported)
libconvert^     single input library        single output
library^        (none)                      single output
pipeline^       single ini file             single ini file
samplestats     single sample file (batch)  single sample (batches supported)
seqconvert      single sample file (batch)  single sample (batches supported)
stuttermark     single sample file (batch)  single sample (batches supported)
stuttermodel    list of sample files        single output
tssv            single sample FQ/FA         single output + report
vis^            single sample (optional)    single output
*TODO: add option to change single output to multi-out (batch_process=True)
^does not use add_args functions (bgmodel/predict use sequence_format_args)

Input/output conventions:
* Write single output to sys.stdout by default, allow changing by -o
* Write report (if applicable) to sys.stderr by default, allow changing by -R
* For multi-in to single-out: list input files as positionals
* For single-in: provide [IN], [OUT] positionals (defaulting IN to sys.stdin)
* Single-in batch support via -i/-o; mutex with positionals!
  (if len(-o) == len(-i), map infile->outfile; if len(-o) == 1,
   map sample->outfile by rewriting tag)
* Multi-in to multi-out: allow multiple values in -o option (currently unused)

Reserved option letters:
-h  Help (used globally)
-v  Version (used globally)
-d  Debug (used globally)
-i  Batch input files
-o  Output files
-R  Report file
-F  Target sequence format
-l  Library
-e  Sample tag extraction pattern
-f  Sample tag format

Options:
allelefinder    a     d e fF  h       l mMn o      R      v   x
bganalyse       a   c d e fF  h       l m   o p           v
bgcorrect             d e fF  h i     l  M  o             v
bgestimate      a   cCd e f g hH      l mMn o p    RsS    v
bghomraw        a   cCd e fF  h       l mMn o       sS    v
bghomstats      a   cCd e fF  h       l mMn o       sS    v
bgmerge               d       h       l     o             v
bgpredict        A    d       h       l  Mn           t   v
findnewalleles        d e f   h i     l  M  o             v
library         a     d       h                       t   v
samplestats     aAbBcCdDe fF  h i       mMnNo pP          v     yY
seqconvert      a   c d e f   h i     lLmM  o     r       v
stuttermark           d e f   h i     l m n o     r s     v
stuttermodel    a   cCdDe f   h       lLmMn oO    r sSt u v       z
tssv            aA    dD   F  h         mMn        R   T  v    X
vis             aAbBcCd       hH Ij    LmMnN  p  Q  sStT UvVw xX Y Z


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Action for special values in sequence columns:
TOOL            'No data'                   'Other sequences'
allelefinder    Not suitable for marker     Ignored (Not suitable for marker)
bganalyse       Ignored                     Ignored
bgcorrect       Transparent                 Transparent
bgestimate      Ignored                     Ignored
bghomraw        Ignored                     Ignored
bghomstats      Ignored                     Ignored
bgmerge         Transparent                 Transparent
bgpredict       Ignored                     Ignored
findnewalleles  Marked as 'new'             Marked as 'new'
samplestats     Transparent                 Transparent; may remove or add more
seqconvert      Transparent                 Transparent
stuttermark     Marked as 'UNKNOWN'         Marked as 'UNKNOWN'
stuttermodel    Ignored                     Ignored
tssv            May create them             May create them

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

allelefinder    analysis    default output  output option
bganalyse       (as output) raw             yes
bgcorrect       raw         (as input)      yes
bgestimate      raw         raw             no
bghomraw        (as output) raw             yes
bghomstats      (as output) (as input)      yes
bgmerge         raw         raw             no
bgpredict       raw         raw             no
findnewalleles  raw         (as input)      no
samplestats     (as input)  (as input)      no
stuttermark     tssv        tssv            no
stuttermodel    raw         not applicable  not applicable
tssv            raw         raw             yes

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Tool and visualisation version numbering, e.g., v1.2.3:
1   major version, changes only with large, disruptive, fundamental changes
2   minor version, changes when the default output is altered, or when it is
    otherwise likely that user pipelines will break when updating
3   patch version, changes with any other changes (bug fixes, new optional
    features, etc.)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Find TODOs and FIXMEs in the code:
grep "TODO\|FIXME" *.py */*.py */*/*.py

Number of lines of Python, excluding empty lines and comments:
grep -v "^\s*\(#.*\)\?$" *.py */*.py */*/*.py | wc -l

Number of lines of JSON, excluding empty lines and those with only a brace:
grep -v "^\s*[{}]\?\[\?\]\?,\?$"  */*/*/*.json | wc -l